text(0.5, 0.5, txt, cex = cex.cor * r)
}
# Customize upper panel
upper.panel<-function(x, y){
points(x,y, pch = 19, col = my_cols[iris$Species])
}
# Create the plots
pairs(iris[,1:4],
lower.panel = panel.cor,
upper.panel = upper.panel)
#Add correlations on the scatter plots:
# Customize upper panel
upper.panel<-function(x, y){
points(x,y, pch=19, col=c("red", "green3", "blue")[iris$Species])
r <- round(cor(x, y), digits=2)
txt <- paste0("R = ", r)
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
text(0.5, 0.9, txt)
}
pairs(iris[,1:4], lower.panel = NULL,
upper.panel = upper.panel)
library(psych)
library(psych)
library(psych)
library(psych)
install.packages("psych")
library(psych)
pairs.panels(iris[,-5],
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
ellipses = TRUE # show correlation ellipses
)
head(ToothGrowth, 6)
# Box plot of one variable
boxplot(ToothGrowth$len)
# Box plots by groups (dose)
# remove frame
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE)
# Horizontal box plots
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,
horizontal = TRUE)
# Notched box plots
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,
notch = TRUE)
boxplot(ToothGrowth$len)
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE)
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE)
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,
notch = TRUE)
boxplot(ToothGrowth$len)
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE)
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,
horizontal = TRUE)
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,
notch = TRUE)
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,
names = c("D0.5", "D1", "D2"))
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,
border = "steelblue")
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,
border = c("#999999", "#E69F00", "#56B4E9"))
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,
col = "steelblue")
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,
col = c("#999999", "#E69F00", "#56B4E9"))
#Box plot with multiple groups
boxplot(len ~ supp*dose, data = ToothGrowth,
col = c("white", "steelblue"), frame = FALSE)
boxplot(len ~ dose, data = ToothGrowth,
main = "Plot of length by dose",
xlab = "Dose (mg)", ylab = "Length",
col = "lightgray", frame = FALSE)
install.packages("gplots")
library("gplots")
boxplot2(len ~ dose, data = ToothGrowth,
frame = FALSE)
# Put the annotation at the top
boxplot2(len ~ dose, data = ToothGrowth,
frame = FALSE, top = TRUE)
ToothGrowth$dose <- as.factor(ToothGrowth$dose)
# Print the first 6 rows
head(ToothGrowth, 6)
#Create strip charts
# Plot len by dose
stripchart(len ~ dose, data = ToothGrowth,
pch = 19, frame = FALSE)
# Vertical plot using method = "jitter"
stripchart(len ~ dose, data = ToothGrowth,
pch = 19, frame = FALSE, vertical = TRUE,
method = "jitter")
# Change point shapes (pch) and colors by groups
# add main title and axis labels
stripchart(len ~ dose, data = ToothGrowth,
frame = FALSE, vertical = TRUE,
method = "jitter", pch = c(21, 18, 16),
col = c("#999999", "#E69F00", "#56B4E9"),
main = "Length by dose", xlab = "Dose", ylab = "Length")
# Change point shapes (pch) and colors by groups
# add main title and axis labels
stripchart(len ~ dose, data = ToothGrowth,
frame = FALSE, vertical = TRUE,
method = "jitter", pch = c(21, 18, 16),
col = c("#999999", "#E69F00", "#56B4E9"),
main = "Length by dose", xlab = "Dose", ylab = "Length")
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
library(scales)
knitr::opts_chunk$set(echo=TRUE)
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
library(scales)
colors = c(""#CC1011", "#665555", "#05a399", "#cfcaca", "#f5e840", "#0683c9", "#e075b0"")
apr_data <- read.csv("uber-raw-data-apr14.csv")
colors = c(#CC1011", "#665555", "#05a399", "#cfcaca", "#f5e840", "#0683c9", "#e075b0"")
colors = c("#CC1011", "#665555", "#05a399", "#cfcaca", "#f5e840", "#0683c9", "#e075b0"")
apr_data <- read.csv("uber-raw-data-apr14.csv")
colors = c("#CC1011", "#665555", "#05a399", "#cfcaca", "#f5e840", "#0683c9", "#e075b0")
apr_data <- read.csv("uber-raw-data-apr14.csv")
shiny::runApp('D:/Uber Data Analysis/Uber')
knitr::opts_chunk$set(echo=TRUE)
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
library(scales)
colors = c("#CC1011", "#665555", "#05a399", "#cfcaca", "#f5e840", "#0683c9", "#e075b0")
apr_data <- read.csv("uber-raw-data-apr14.csv")
apr_data <- read.csv("uber-raw-data-apr14.csv")
knitr::opts_chunk$set(echo=TRUE)
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
library(scales)
colors = c("#CC1011", "#665555", "#05a399", "#cfcaca", "#f5e840", "#0683c9", "#e075b0")
apr_data <- read.csv("uber-raw-data-apr14.csv")
apr_data <- read.csv("uber-raw-data-apr14.csv")
apr_data <- read.csv("uber-raw-data-apr14.csv")
colors = c("#CC1011", "#665555", "#05a399", "#cfcaca", "#f5e840", "#0683c9", "#e075b0")
apr_data <- read.csv("uber-raw-data-apr14.csv")
knitr::opts_chunk$set(echo=TRUE)
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
library(scales)
colors = c("#CC1011", "#665555", "#05a399", "#cfcaca", "#f5e840", "#0683c9", "#e075b0")
apr_data <- read.csv("uber-raw-data-apr14.csv")
myfile = read.csv("D:\uber\uber-raw-data-apr14.csv")
apr_data = read.csv("D:\uber\uber-raw-data-apr14.csv")
apr_data <- read.csv("uber-raw-data-apr14.csv")
knitr::opts_chunk$set(echo=TRUE)
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
library(scales)
colors = c("#CC1011", "#665555", "#05a399", "#cfcaca", "#f5e840", "#0683c9", "#e075b0")
apr_data <- read.csv("uber-raw-data-apr14.csv")
install.packages("class")
library(class)
install.packages("gmodels")
library(gmodels)
irisdata<-read.csv("E://MCS/Data Mining and R/Iris.csv")
View(irisdata)
irisdata<-read.csv("E://MCS/Data Mining and R/Iris.csv")
irisdata<-iris
View(irisdata)
normalize<-function(x){
return((x-min(x))/(max(x)-min(x)))
}
iris_normdata<-as.data.frame(
lapply(irisdata[,c(1:4)],
normalize))
iris_normdata
set.seed(123)
irisdata_spl<-sample(1:nrow(iris_normdata),
size=nrow(iris_normdata)*0.8,
replace = FALSE)
irisdata_spl
iris_train<-iris_normdata[irisdata_spl,] #80% of the normalized data
iris_test<-iris_normdata[-irisdata_spl,] #remaining part of the normalized data
iris_train_labels<-irisdata[irisdata_spl, 5]
iris_test_labels<-irisdata[irisdata_spl, 5]
nrow(iris_train_labels)
knn_model.11<-knn(train=iris_train,
test=iris_test,
cl=iris_train_labels, k=11)
knn_model.11
knn_model.25<-knn(train=iris_train,
test=iris_test,
cl=iris_train_labels,
k=25)
knn_model.25
CrossTable(x=iris_test_labels, y=knn_model.11)
acc.11<-100*sum(iris_test_labels==knn_model.11)/NROW(iris_test_labels)
acc.25<-100*sum(iris_test_labels==knn_model.25)/NROW(iris_test_labels)
acc.11
acc.25
knn_model.25<-knn(train=iris_train,
test=iris_test,
cl=iris_train_labels,
k=25)
knn_model.25
CrossTable(x=iris_test_labels, y=knn_model.11)
x<-c(151,174,138,186,128,136,179,163,152,131)
y<-c(63,81,56,91,47,57,76,72,62,48)
x<-c(151,174,138,186,128,136,179,163,152,131)
y<-c(63,81,56,91,47,57,76,72,62,48)
lmodel<-lm(y~x)
print(model)
x<-c(151,174,138,186,128,136,179,163,152,131)
y<-c(63,81,56,91,47,57,76,72,62,48)
lmodel <- lm(y~x)
print(lmodel)
x<-c(151,174,138,186,128,136,179,163,152,131)
y<-c(63,81,56,91,47,57,76,72,62,48)
#Apply the lm() function
lmodel <- lm(y~x)
print(lmodel)
print(summary(lmodel))
windows()
windows()
plot(y,x,col = "blue",xlab = "height in cms",ylab = "weight in kg")
abline(lm(x~y),col="blue")
lmodel$residuals
mean(lmodel$residuals)
a<-data.frame(x=170)
result<-predict(lmodel,a)
print(result)
data()
attach(Cars)
data()
attach(cars)
View(mtcars)
model_r=lm(MPG~VOL,data = Cars1)
data()
attach(cars)
View(mtcars)
model_r=lm(MPG~VOL,data = cars1)
model_r=lm(MPG~VOL,data = cars1)
data()
attach(cars)
View(mtcars)
model_r=lm(MPG~VOL,data = cars)
model_r=lm(MPG~VOL,data = cars)
summary(model_r)
model_wv1=lm(MPG~VOL+SP+HP)
summary(model_wv1)
model_wv1=lm(mpg~cyl+disp)
data()
attach(cars)
model_wv1=lm(mpg~cyl+disp)
shiny::runApp('D:/Uber Data Analysis/Uber')
runApp('D:/Uber Data Analysis/Uber')
runApp('D:/Uber Data Analysis/Uber')
runApp('D:/Uber Data Analysis/Uber')
runApp('D:/Uber Data Analysis/Uber')
runApp('D:/Uber Data Analysis/Uber')
runApp('D:/Uber Data Analysis/Uber')
runApp('D:/Uber Data Analysis/Uber')
runApp('D:/Uber Data Analysis/Uber')
runApp('D:/Uber Data Analysis/Uber')
library(tidyr)
runApp('D:/Uber Data Analysis/Uber')
library(tidyr)
runApp('D:/Uber Data Analysis/Uber')
runApp('D:/Uber Data Analysis/Uber')
runApp('D:/Uber Data Analysis/Uber')
runApp('D:/Uber Data Analysis/Uber')
q()
x<-1:10
y<-x*x
windows()
plot(x, y, type="b")
plot(x, y, type="h")
plot(x,y, type="s")
windows()
plot(x, y, type="b")
plot(x, y, type="h")
windows()
plot(x, y, type="b")
plot(x, y, type="h")
windows()
plot(x, y, type="b")
plot(x, y, type="h")
plot(x,y, type="s")
x<-1:10
y<-x*x
windows()
plot(x, y)
x<-1:10
y<-x*x
windows()
plot(x, y)
plot(x, y, type="h")
x<-1:10
y<-x*x
windows()
plot(x, y,type = "b")
windows()
plot(x, y,type = "b")
x<-1:10
y<-x*x
windows()
plot(x, y,type = "b")
plot(x, y)
x<-1:10
y<-x*x
windows()
plot(x, y,type = "b")
plot(x, y,type = "h")
plot(x,y, type="s")
install.packages("car")
library("car")
scatterplot(wt ~ mpg, data = mtcars)
scatterplot(wt ~ mpg, data = mtcars,
smooth = FALSE, grid = FALSE, frame = FALSE)
scatterplot(wt ~ mpg, data = mtcars,
smooth = FALSE, grid = FALSE, frame = FALSE)
scatterplot
scatterplot(wt ~ mpg, data = mtcars,
smooth = FALSE, grid = FALSE, frame = FALSE)
view(scatterplot)
scatterplot(wt ~ mpg, data = mtcars,
smooth = FALSE, grid = FALSE, frame = FALSE)
View(scatterplot)
scatterplot(wt ~ mpg | cyl, data = mtcars,
smooth = FALSE, grid = FALSE, frame = FALSE)
# Prepare the data set
x <- iris$Sepal.Length
y <- iris$Sepal.Width
z <- iris$Petal.Length
grps <- as.factor(iris$Species)
# Plot
library(scatterplot3d)
scatterplot3d(x, y, z, pch = 16)
# Change color by groups
# add grids and remove the box around the plot
# Change axis labels: xlab, ylab and zlab
colors <- c("#999999", "#E69F00", "#56B4E9")
scatterplot3d(x, y, z, pch = 16, color = colors[grps],
grid = TRUE, box = FALSE, xlab = "Sepal length",
ylab = "Sepal width", zlab = "Petal length")
head(iris)
pairs(iris[,1:4], pch = 19)
pairs(iris[,1:4], pch = 19, lower.panel = NULL)
#Color points by groups (species)
my_cols <- c("#00AFBB", "#E7B800", "#FC4E07")
pairs(iris[,1:4], pch = 19,  cex = 0.5,
col = my_cols[iris$Species],
lower.panel=NULL)
#Add correlations on the lower panels: The size of the text is proportional to the correlations.
# Correlation panel
panel.cor <- function(x, y){
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- round(cor(x, y), digits=2)
txt <- paste0("R = ", r)
cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
# Customize upper panel
upper.panel<-function(x, y){
points(x,y, pch = 19, col = my_cols[iris$Species])
}
# Create the plots
pairs(iris[,1:4],
lower.panel = panel.cor,
upper.panel = upper.panel)
#Add correlations on the scatter plots:
# Customize upper panel
upper.panel<-function(x, y){
points(x,y, pch=19, col=c("red", "green3", "blue")[iris$Species])
r <- round(cor(x, y), digits=2)
txt <- paste0("R = ", r)
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
text(0.5, 0.9, txt)
}
pairs(iris[,1:4], lower.panel = NULL,
upper.panel = upper.panel)
library(psych)
pairs.panels(iris[,-5],
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
ellipses = TRUE # show correlation ellipses
)
# Print the first 6 rows
head(ToothGrowth, 6)
# Box plot of one variable
boxplot(ToothGrowth$len)
# Box plots by groups (dose)
# remove frame
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE)
# Horizontal box plots
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,
horizontal = TRUE)
# Notched box plots
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,
notch = TRUE)
#Change group names
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,
names = c("D0.5", "D1", "D2"))
#Change color
# Change the color of border using one single color
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,
border = "steelblue")
# Change the color of border.
#  Use different colors for each group
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,
border = c("#999999", "#E69F00", "#56B4E9"))
# Change fill color : single color
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,
col = "steelblue")
# Change fill color: multiple colors
boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,
col = c("#999999", "#E69F00", "#56B4E9"))
#Box plot with multiple groups
boxplot(len ~ supp*dose, data = ToothGrowth,
col = c("white", "steelblue"), frame = FALSE)
#Change main title and axis labels
# Change axis titles
# Change color (col = "gray") and remove frame
# Create notched box plot
boxplot(len ~ dose, data = ToothGrowth,
main = "Plot of length by dose",
xlab = "Dose (mg)", ylab = "Length",
col = "lightgray", frame = FALSE)
install.packages("gplots")
library("gplots")
# Box plot with annotation
boxplot2(len ~ dose, data = ToothGrowth,
frame = FALSE)
# Put the annotation at the top
boxplot2(len ~ dose, data = ToothGrowth,
frame = FALSE, top = TRUE)
ToothGrowth$dose <- as.factor(ToothGrowth$dose)
# Print the first 6 rows
head(ToothGrowth, 6)
#Create strip charts
# Plot len by dose
stripchart(len ~ dose, data = ToothGrowth,
pch = 19, frame = FALSE)
# Vertical plot using method = "jitter"
stripchart(len ~ dose, data = ToothGrowth,
pch = 19, frame = FALSE, vertical = TRUE,
method = "jitter")
# Change point shapes (pch) and colors by groups
# add main title and axis labels
stripchart(len ~ dose, data = ToothGrowth,
frame = FALSE, vertical = TRUE,
method = "jitter", pch = c(21, 18, 16),
col = c("#999999", "#E69F00", "#56B4E9"),
main = "Length by dose", xlab = "Dose", ylab = "Length")
# Box plot with annotation
boxplot2(len ~ dose, data = ToothGrowth,
frame = FALSE)
# Put the annotation at the top
boxplot2(len ~ dose, data = ToothGrowth,
frame = FALSE, top = TRUE)
ToothGrowth$dose <- as.factor(ToothGrowth$dose)
# Print the first 6 rows
head(ToothGrowth, 6)
#Create strip charts
# Plot len by dose
stripchart(len ~ dose, data = ToothGrowth,
pch = 19, frame = FALSE)
# Vertical plot using method = "jitter"
stripchart(len ~ dose, data = ToothGrowth,
pch = 19, frame = FALSE, vertical = TRUE,
method = "jitter")
# Change point shapes (pch) and colors by groups
# add main title and axis labels
stripchart(len ~ dose, data = ToothGrowth,
frame = FALSE, vertical = TRUE,
method = "jitter", pch = c(21, 18, 16),
col = c("#999999", "#E69F00", "#56B4E9"),
main = "Length by dose", xlab = "Dose", ylab = "Length")
stripchart(len ~ dose, data = ToothGrowth,
frame = FALSE, vertical = TRUE,
method = "jitter", pch = c(21, 18, 16),
col = c("#999999", "#E69F00", "#56B4E9"),
main = "Length by dose", xlab = "Dose", ylab = "Length")
stripchart(len ~ dose, data = ToothGrowth,
frame = FALSE, vertical = TRUE,
method = "jitter", pch = c(21, 18, 16),
col = c("#999999", "#E69F00", "#56B4E9"),
main = "Length by dose", xlab = "Dose", ylab = "Length")
setwd("D:/Uber Data Analysis/Uber")
shiny::runApp()
